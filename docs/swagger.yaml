definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.User:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      referral_code:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User sign-in
      tags:
      - authentication
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns a success message
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User sign-up
      tags:
      - authentication
  /ref-list/{:id}:
    get:
      consumes:
      - application/json
      description: Retrieves the list of referrals for a given user ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get referral list
      tags:
      - referral
  /referral/create-ref:
    post:
      consumes:
      - application/json
      description: Generates a referral code for the authenticated user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a referral code
      tags:
      - referral
  /referral/delete-ref:
    delete:
      consumes:
      - application/json
      description: Deletes the referral code for the authenticated user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a referral code
      tags:
      - referral
  /referral/token:
    get:
      consumes:
      - application/json
      description: Retrieves the referral token associated with the specified email
        address
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get referral token
      tags:
      - referral
swagger: "2.0"
